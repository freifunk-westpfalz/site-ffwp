{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'wp-',

  -- Name of the community.
  site_name = 'Freifunk Westpfalz',

  -- Shorthand of the community.
  site_code = 'ffwp',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.198.0.0/16',
  prefix6 = 'fdc6:c4fe:1de4::/64', -- nodes announce this via radv with lft 0
  extra_prefixes6 = { '2a03:2260:100d::/48', '2a07:59c6:ec01::/48' },

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3', -- Europe/Berlin
  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'ntp.freifunk-westpfalz.de','fdc6:c4fe:1de4:0:beef::1'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 6,

    -- List of supported wifi rates (optional)
    -- Example removes 802.11b compatibility for better performance
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},

    -- List of basic wifi rates (optional, required if supported_rates is set)
    -- Example removes 802.11b compatibility for better performance
    basic_rate = {6000, 9000, 18000, 36000, 54000},

    -- ESSID used for client network.
    ap = {
      ssid = 'westpfalz.freifunk.net',
      -- disabled = true, (optional)
    },
    --[[
    mesh = {
      -- Adjust these values!
      id = 'ffwp-mesh',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
    --]]
    ibss = {
      -- Adjust these values!
      ssid = 'c4:fe:1d:e4:02:03',  -- ESSID used for mesh
      bssid = 'c4:fe:1d:e4:02:03', -- BSSID used for mesh

      -- Bitrate used for multicast/broadcast packets.
      mcast_rate = 12000,
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'westpfalz.freifunk.net 5GHz',
    },
    --[[
    mesh = {
      id = 'ffwp-mesh',
      mcast_rate = 12000,
    },
    --]]
    ibss = {
      -- Adjust these values!
      ssid = 'c4:fe:1d:e4:02:03',  -- ESSID used for mesh
      bssid = 'c4:fe:1d:e4:02:03', -- BSSID used for mesh

      -- Bitrate used for multicast/broadcast packets.
      mcast_rate = 12000,
    },
  },

  -- disable PoE passthrough on capable devices by default
  -- poe_passthrough = false;

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    name = 'nextnode',
    -- anycast IPs of all nodes
    ip4 = '10.198.0.1',
    ip6 = 'fdc6:c4fe:1de4::1',

    -- anycast MAC of all nodes
    mac = '02:00:0A:C6:00:01',
  },

  dns = {
    cacheentries = 4096,
    servers = { 'fdc6:c4fe:1de4:0:cafe::1', 'fdc6:c4fe:1de4:0:cafe::2', 'fdc6:c4fe:1de4:0:cafe::3', 'fdc6:c4fe:1de4:0:cafe::4' },
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },

  mesh_vpn = {
    enabled = true,
    mtu = 1406,

    fastd = {
      -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
      -- what these options do.

      -- List of crypto-methods to use.
      methods = {'salsa2012+umac'},
      configurable = true,
      -- syslog_level = 'warn',

      groups = {
        backbone = {
          -- Limit number of connected peers to reduce bandwidth.
          limit = 1,

          -- List of peers.
          peers = {
            gw01 = {
              key = '92d472795ccedfc578db63c920bddacb8a5dc2f9d3dff17703ddbc7b980478a7',
              -- This is a list, so you might add multiple entries.
              remotes = {
                  '"gw01.freifunk-westpfalz.de" port 10000',
                  '[2001:4ba0:fffc:f4:101::1] port 10000',
                  '89.163.141.92 port 10000',
              },
            },
            gw02 = {
              key = '444c83f025e98971a02502acc681fd8139c13ad5bf404eb0a88861f2509a3404',
              remotes = {
                  '"gw02.freifunk-westpfalz.de" port 10000',
                  '[2a01:4f8:140:81e8:46:4:148:30] port 10000',
                  '46.4.148.30 port 10000',
              },
            },
            gw03 = {
              key = '23650e3c34c2f7d27f8d4208a8800161b5ebb64e523bce99fbf9476217297299',
              remotes = {
                  '"gw03.freifunk-westpfalz.de" port 10000',
                  '[2a07:59c6:ee02:203::1] port 10000',
                  '185.215.214.138 port 10000',
              },
            },
            gw04 = {
              key = 'c6a0f97f831a94b05a104b98274c1e8c44046e2b0be5d7d7b152a0f195d2ca8c',
              remotes = {
                  '"gw04.freifunk-westpfalz.de" port 10001',
                  '[2a07:59c6:ee02:204::1] port 10001',
                  '185.215.214.139 port 10001',
              },
            },
            gw05 = {
              key = '919629d4f368864cc03fdc4dee51f4c9039b5e5b5c6f2885335f5223a6c3280b',
              remotes = {
                  '"gw05.freifunk-westpfalz.de" port 10001',
              },
            },
            gw06 = {
              key = '543080e5573518ce2162ee0e88ef641af7e714c497a390b26d7975ef23531b77',
              remotes = {
                  '"gw06.freifunk-westpfalz.de" port 10001',
              },
            },
            gw07 = {
              key = 'f2185edcfdf1e8e2d7731bc667fd13afcb05c685db162b6935f9e3a71b4fe858',
              remotes = {
                  '"gw07.freifunk-westpfalz.de" port 10002',
              },
            },
            gw08 = {
              key = 'e0c89669d67178cf04918a73f5630bec7c94d688487e1cb67f7bedf1ba6d113a',
              remotes = {
                  '"gw08.freifunk-westpfalz.de" port 10002',
              },
            },
            gw09 = {
              key = 'db507781477202a35fd0adab83f6fc8850f80934f750cd4514bb535f00c8f0db',
              remotes = {
                  '"gw09.freifunk-westpfalz.de" port 10002',
              },
              },
          },
          -- Optional: nested peer groups
          -- groups = {
          --   backbone_sub = {
          --     ...
          --   },
          --   ...
          -- },
        },
        -- Optional: additional peer groups, possibly with other limits
        -- backbone2 = {
        --   ...
        -- },
      },
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 400,

      -- Default download limit (kbit/s).
      ingress = 6000,
    },
  },

  autoupdater = {
    -- Default branch. Dont forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
            'http://download.freifunk-westpfalz.de/stable/sysupgrade',
            'http://download.fallback.freifunk-westpfalz.de/stable/sysupgrade',
            'http://[fdc6:c4fe:1de4:0:beef::1]/stable/sysupgrade'
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
                '59f26a523d807c45fdaa030787512cf08a71575b57dc53dbdd964175fd3cb388', -- little.ben
                '8eef3fd1a0c1eeb8e594dac45e19cd2715afb278be2bea1187b34fe2c65c4f0b', -- paalsteek
                '67d68f269ed70ba45f0f162ccc4caa181074651b5e8bfb38146c49e0c7249606', -- Zaunei
                '4172556e950f3dd017bf2a2d5a472366b95f364c6ce232f3ffc9e7ac5a7d54e4', -- Xermon ab 0.5.1
                'fdb06f616d97ac94a1777edc19de13cea09314d77b2f20fc0975ea6d5c70badc', -- SilSte
        },
      },

      beta = {
        name = 'beta',
        mirrors = {
            'http://download.freifunk-westpfalz.de/beta/sysupgrade',
            'http://download.fallback.freifunk-westpfalz.de/beta/sysupgrade',
            'http://[fdc6:c4fe:1de4:0:beef::1]/beta/sysupgrade'
        },
        good_signatures = 1,
        pubkeys = {
                '59f26a523d807c45fdaa030787512cf08a71575b57dc53dbdd964175fd3cb388', -- little.ben
                '8eef3fd1a0c1eeb8e594dac45e19cd2715afb278be2bea1187b34fe2c65c4f0b', -- paalsteek
                '67d68f269ed70ba45f0f162ccc4caa181074651b5e8bfb38146c49e0c7249606', -- Zaunei
                '4172556e950f3dd017bf2a2d5a472366b95f364c6ce232f3ffc9e7ac5a7d54e4', -- Xermon ab 0.5.1
                'fdb06f616d97ac94a1777edc19de13cea09314d77b2f20fc0975ea6d5c70badc', -- SilSte
        },
      },

      nightly = {
        name = 'nightly',
        mirrors = {
            'http://download.freifunk-westpfalz.de/.nightly/sysupgrade',
            'http://download.fallback.freifunk-westpfalz.de/.nightly/sysupgrade',
            'http://[fdc6:c4fe:1de4:0:beef::1]/.nightly/sysupgrade'
        },
        good_signatures = 1,
        pubkeys = {
                '47f2ebfbb7e16a46fccf8514815e0fcd76868e4db6088e4bd65dca972fd93af1', -- ffwp autobuilder
                '59f26a523d807c45fdaa030787512cf08a71575b57dc53dbdd964175fd3cb388', -- little.ben
                '8eef3fd1a0c1eeb8e594dac45e19cd2715afb278be2bea1187b34fe2c65c4f0b', -- paalsteek
                '67d68f269ed70ba45f0f162ccc4caa181074651b5e8bfb38146c49e0c7249606', -- Zaunei
                '4172556e950f3dd017bf2a2d5a472366b95f364c6ce232f3ffc9e7ac5a7d54e4', -- Xermon ab 0.5.1
                'fdb06f616d97ac94a1777edc19de13cea09314d77b2f20fc0975ea6d5c70badc', -- SilSte
        },
      },

    },
  },
  ssid_changer = {
    enabled = true,
    switch_timeframe = 30,    -- only once every timeframe (in minutes) the SSID will change to the Offline-SSID 
                              -- set to 1440 to change once a day
                              -- set to 1 minute to change every time the router gets offline
    first = 0,                -- the first few minutes directly after reboot within which an Offline-SSID always may be activated (must be <= switch_timeframe)
    prefix = 'TEST-CONF',   -- use something short to leave space for the nodename (no '~' allowed!)
    suffix = 'nodename',      -- generate the SSID with either 'nodename', 'mac' or to use only the prefix: 'none'
    
    tq_limit_enabled = false, -- if false, the offline SSID will only be set if there is no gateway reacheable
                              -- upper and lower limit to turn the offline_ssid on and off
                              -- in-between these two values the SSID will never be changed to prevent it from toggeling every minute.
    tq_limit_max = 45,        -- upper limit, above that the online SSID will be used
    tq_limit_min = 35         -- lower limit, below that the offline SSID will be used
  },


  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },

  -- config_mode = {
    -- Show/hide the altitude field
    -- geo_location = {
      -- show_altitude = false,
    -- },
    -- define if the contact field is obligatory (optional)
    -- owner = {
      -- obligatory = true
    -- },
  -- },

}
